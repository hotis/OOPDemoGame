package oopdemogame;

import java.util.List;

/**
 * Абстрактный базовый класс для всех персонажей.
 */
public abstract class Персонаж implements Атакующий, ИмеющийЗдоровье {
    protected String имя;
    protected int здоровье;
    protected int урон;
    protected double шансУльты;
    protected double шансПромаха; // Новое свойство
    protected АтакаСтратегия атака;
    
    /**
     * Создаёт нового персонажа.
     *
     * @param имя         имя персонажа
     * @param здоровье    начальное здоровье
     * @param урон        урон, наносимый персонажем
     * @param шансУльты   вероятность использования ультимативной способности
     * @param шансПромаха вероятность промаха при атаке
     * @param атака       используемая стратегия атаки
     */
    public Персонаж(String имя, int здоровье, int урон, double шансУльты, double шансПромаха, АтакаСтратегия атака) {
        this.имя = имя;
        this.здоровье = здоровье;
        this.урон = урон;
        this.шансУльты = шансУльты;
        this.шансПромаха = шансПромаха;
        this.атака = атака;
    }
    
    /**
     * Устанавливает новую стратегию атаки.
     *
     * @param новаяАтака новая стратегия атаки
     */
    public void установитьСтратегиюАтаки(АтакаСтратегия новаяАтака) {
        this.атака = новаяАтака;
    }
    
    /**
     * Выполняет атаку по указанному списку целей.
     *
     * @param цельСписок список возможных целей для атаки
     */    
    @Override
    public final void атаковать(List<Персонаж> цельСписок) {
        if (промахнуться()) return;
        
        Персонаж цель = БоеваяСистема.найтиЖивогоВрага(цельСписок);
        if (цель == null) {
            System.out.println(имя + " не может атаковать — нет целей.");
            return;
        }

        
        атака.выполнитьАтаку(this, цель);
    }
    
     /**
     * Проверяет, произошёл ли промах при атаке.
     *
     * @return true, если промахнулся, иначе false
     */
    private boolean промахнуться() {
        if (Math.random() < шансПромаха) {
            System.out.println(имя + " промахнулся!");
            return true;
        }
        return false;
    }

    /**
     * Возвращает имя персонажа.
     *
     * @return имя персонажа
     */
    public String получитьИмя() {
        return имя;
    }     
    
    /**
     * Наносит урон персонажу.
     *
     * @param урон количество урона
     */
    @Override
    public void потерятьЗдоровье(int урон) {
        здоровье -= урон;
        if (здоровье < 0) здоровье = 0;
        System.out.println(имя + " получил " + урон + " урона. Осталось здоровья: " + здоровье);
    }
    
    /**
     * Проверяет, жив ли персонаж.
     *
     * @return true, если здоровье > 0, иначе false
     */
    @Override
    public boolean жив() {
        return здоровье > 0;
    }
    
    /**
     * Отображает статистику персонажа.
     */
    public abstract void показатьСтатистику();
}
